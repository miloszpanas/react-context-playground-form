{"version":3,"sources":["context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Layout/Header.js","components/Pages/About.js","components/Layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Pages/NotFound.js","components/Pages/Test.js","components/Contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","response","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","prevState","onItemDelete","_callee","regenerator_default","wrap","_context","prev","next","delete","stop","onDropDownClick","name","e","console","log","_this2","_this$props$data","email","phone","className","style","display","justifyContent","onClick","cursor","marginLeft","color","marginRight","Link","to","bind","Contacts","react","Contacts_Contact","key","Header","appName","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddComponent","errors","onInputChange","defineProperty","target","onFormSubmit","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","_this$state2","onSubmit","Layout_TextInputGroup","NotFound","Test","username","fetch","then","json","userId","title","EditContact","updatedContact","match","params","put","App","context","HashRouter","Layout_Header","Switch","Route","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2a9f86b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\nclass Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\nexport default Provider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends React.Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState(prevState => ({\n      showContactInfo: !prevState.showContactInfo\n    }));\n  };\n\n  onItemDelete = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n    \n\n  onDropDownClick = (name, e) => {\n    console.log(name);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.data;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4 style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                {name}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-chevron-down\"\n                  style={{ cursor: \"pointer\", marginLeft: 5, color: \"#0078F9\", marginRight: \"auto\" }}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i className=\"far fa-edit text-success\" style={{ marginRight: \"0.6rem\" }} />\n                </Link>\n                <i\n                  onClick={this.onItemDelete.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: \"pointer\",\n                    color: \"darkred\"\n                  }}\n                />\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport Contact from \"./Contact\";\n\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        { value => {\n          const { contacts } = value;\n          return (\n            <Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-primary\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact \n                  key={contact.id} \n                  data={contact} \n                />\n              ))}\n            </Fragment>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\n\nconst Header = (props) => {\n  const { appName } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/react-playground-form\" className=\"navbar-brand\">\n          {appName}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i>  Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"></i>  About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  appName: \"Contact handler\"\n};\n\nHeader.propTypes = {\n  appName: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-5\">About Contact Handler</h1>\n      <p className=\"lead\">Simple app for managing your contacts list</p>\n      <p className=\"text-secondary\">Software version 7.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        className={classnames(\"form-control\",{\n          \"is-invalid\": error\n        })}\n        onChange={onChange}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div> }\n    </div>\n  )\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nexport default TextInputGroup;","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddComponent extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"please, provide a name\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"please, provide an e-mail\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"please, provide a phone no.\" } });\n      return;\n    }\n    \n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact)\n      dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n\n    // clear the form once its submitted\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push('/');\n\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    onChange={this.onInputChange}\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Enter name\"\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"E-mail\"\n                    onChange={this.onInputChange}\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    onChange={this.onInputChange}\n                    type=\"text\"\n                    value={phone}\n                    placeholder=\"Enter phone\"\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddComponent;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">The page you're trying to reach to does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    name: \"\",\n    username: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          name: data.userId,\n          username: data.title\n        })\n      );\n  }\n\n  render() {\n    const { name, username } = this.state;\n    return (\n      <div>\n        <p>\n          {name} {username}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = response.data;\n    this.setState({ \n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n     });\n  }\n\n  onInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"please, provide a name\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"please, provide an e-mail\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"please, provide a phone no.\" } });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\n    dispatch({ type: \"UPDATE_CONTACT\", payload: response.data });\n\n\n    // clear the form once its submitted\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push('/');\n\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    onChange={this.onInputChange}\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Enter name\"\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"E-mail\"\n                    onChange={this.onInputChange}\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    onChange={this.onInputChange}\n                    type=\"text\"\n                    value={phone}\n                    placeholder=\"Enter phone\"\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Provider from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Header from \"./components/Layout/Header\";\nimport About from \"./components/Pages/About\";\nimport AddContact from \"./components/Contacts/AddContact\";\nimport NotFound from \"./components/Pages/NotFound\";\nimport Test from './components/Pages/Test';\nimport EditContact from './components/Contacts/EditContact';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Provider>\n          <Router>\n            <div className=\"App\">\n              <Header appName=\"Contact handler\" />\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route exact path=\"/test\" component={Test} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </div>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}